/*
   Project smart_room

   Gradle build file for JaCaMo Applications
   gennaio 18, 2021 - 10:05:12
*/

buildscript {
    ext.kotlin_version = '1.4.21'
    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        mavenCentral()
        mavenLocal()
        maven {
            setUrl("https://plugins.gradle.org/m2/")
        }

        flatDir {
            dirs 'libs'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.openjfx:javafx-plugin:0.0.9"

        // For JSON
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'           // For JSON
apply plugin: 'eclipse'
apply plugin: "org.openjfx.javafxplugin"        // For JavaFX (enabling TornadoFX)

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://jacamo.sourceforge.net/maven2" }
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }

    //maven { url "https://jade.tilab.com/maven/" }
    jcenter()

    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    compile group: 'org.jacamo', name: 'jacamo', version: '0.9'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // JavaFx
    implementation "org.openjfx:javafx-base:12"
    implementation "org.openjfx:javafx-graphics:12"
    implementation "org.openjfx:javafx-controls:12"
    implementation "org.openjfx:javafx-fxml:12"

    // TornadoFx
    implementation 'no.tornado:tornadofx:1.7.20'

    // For REST consuming
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation("ru.gildor.coroutines:kotlin-coroutines-okhttp:1.0")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.21'

    // For JSON
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1")

    // For semantic
    implementation "org.apache.jena:apache-jena-libs:3.17.0"
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'smart_room.jcm'
    classpath sourceSets.main.runtimeClasspath
}


task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamo-smart_room' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from 'smart_room.jcm'
            rename 'smart_room.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

javafx {
    version = "12"
    modules = [ 'javafx.controls', 'javafx.graphics' ]
}

